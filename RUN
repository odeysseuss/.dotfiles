#!/usr/bin/env bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

section() {
    echo -e "\n${BLUE}===${NC} ${GREEN}$1${NC} ${BLUE}===${NC}"
}

status() {
    echo -e "${YELLOW}➔${NC} $1"
}

success() {
    echo -e "${GREEN}✓${NC} $1"
}

error() {
    echo -e "${RED}✗${NC} $1" >&2
}

section "Development Environment Setup"
echo -e "${YELLOW}Arguments needed:${NC}"
echo "<email> <keyname> <passphrase>"
echo -e "\n${YELLOW}Warning!${NC} Make sure the arguments are provided properly.\n"
echo "Setup will start in a moment"
sleep 1

if [ $# -ne 3 ]; then
    error "Error: All 3 arguments need to be provided"
    exit 1
fi

EMAIL=$1
KEY_NAME="$2"
PASSPHRASE="$3"

section "Setup Nix & Dotfiles"
status "Installing nix..."
sh <(curl --proto '=https' --tlsv1.2 -L https://nixos.org/nix/install) --no-daemon || {
    error "Failed to install nix"
    exit 1
}

status "Setup home manager..."
  . $HOME/.nix-profile/etc/profile.d/nix.sh
nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
nix-channel --update
nix-shell '<home-manager>' -A install
sudo pacman -S git --noconfirm

status "Cloning dotfiles repository..."
git clone https://github.com/ridwanalmahmud/.dotfiles.git || {
    error "Failed to clone dotfiles repository"
    exit 1
}
sudo pacman -Rns git --noconfirm

status "Home manager installation..."
home-manager --extra-experimental-features nix-command --extra-experimental-features flakes --impure switch --flake $HOME/.dotfiles/home#home-nix || {
    error "Failed to install packages"
    exit 1
}
success "Nix setup complete and packages installed"

section "ZSH Configuration"
status "Changing default shell..."
ZSH_PATH=$(which zsh)
if ! grep -q "$ZSH_PATH" /etc/shells 2>/dev/null; then
    echo "$ZSH_PATH" | sudo tee -a /etc/shells >/dev/null
fi
if [ "$SHELL" != "$ZSH_PATH" ]; then
    sudo chsh -s "$ZSH_PATH" robin || {
        error "Failed to change default shell to zsh"
        exit 1
    }
fi

status "Installing Oh My Zsh..."
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" || {
    error "Failed to install Oh My Zsh"
    exit 1
}

status "Configuring ZSH..."
echo "" >"$HOME/.zshrc"
git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"/plugins/zsh-autosuggestions || {
    error "Failed to clone zsh-autosuggestions"
    exit 1
}

status "Running build script..."
"$HOME/.dotfiles/scripts/setup/build.sh" || {
    error "Build script failed"
    exit 1
}

section "SSH Key Setup"
status "Creating SSH directory..."
mkdir -p "$HOME/.ssh" || {
    error "Failed to create .ssh directory"
    exit 1
}
chmod 700 "$HOME/.ssh"

if [ -f "$HOME/.ssh/$KEY_NAME" ]; then
    error "SSH key already exists at $HOME/.ssh/$KEY_NAME"
    exit 1
fi

status "Generating new SSH key..."
ssh-keygen -t ed25519 -f "$HOME/.ssh/$KEY_NAME" -C "$EMAIL" -N "" || {
    error "Failed to generate SSH key"
    exit 1
}

status "Adding passphrase to SSH key..."
expect <<EOF
    spawn ssh-keygen -p -f "$HOME/.ssh/$KEY_NAME"
    expect "Enter new passphrase (empty for no passphrase):"
    send -- "$PASSPHRASE\r"
    expect "Enter same passphrase again:"
    send -- "$PASSPHRASE\r"
    expect eof
EOF

status "Configuring SSH agent persistence..."
cat >>"$HOME/.zshrc" <<EOL

# SSH Agent Configuration
if [ -z "\$SSH_AUTH_SOCK" ] && [ -f "\$HOME/.ssh/${KEY_NAME}" ]; then
    eval "\$(ssh-agent -s)" >/dev/null
    ssh-add "\$HOME/.ssh/${KEY_NAME}" 2>/dev/null
fi
EOL

success "SSH key setup completed"

section "Setup Complete"
success "Development environment setup successfully completed!"
echo -e "\nNext steps:"
echo "1. Add your SSH key to GitHub:"
echo "   cat ~/.ssh/${KEY_NAME}.pub"
echo "2. Restart your terminal to enjoy your new environment!"

"$HOME/.dotfiles/scripts/dashboard/barca.sh"
